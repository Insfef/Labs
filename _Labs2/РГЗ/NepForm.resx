<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AaOFwMrFGzVsAAAAAElFTkSuQmCC
</value>
  </data>
</root>